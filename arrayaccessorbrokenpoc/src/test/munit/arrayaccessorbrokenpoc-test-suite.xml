<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <munit:config name="munit" doc:name="MUnit configuration"/>
    <spring:beans>
        <spring:import resource="classpath:arrayaccessorbrokenpoc.xml"/>
    </spring:beans>
    <munit:test name="arrayaccessorbrokenpoc-test-suite-arrayaccessorbrokenpocFlowTest" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock Payload">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['HTTP']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]" mimeType="application/json"/>
        </mock:when>
        <mock:when messageProcessor=".*:.*" doc:name="Mock Payload Logger">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Logger Show Payload']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[]"/>
        </mock:when>
        <mock:spy messageProcessor=".*:.*" doc:name="Spy">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Group Lineitems and Discounts']"/>
            </mock:with-attributes>
            <mock:assertions-after-call>
                <munit:assert-on-equals message="Incorrectly derived line items" expectedValue="#[8]" actualValue="#[flowVars.lineItems.size()]" doc:name="Assert Equals - Line Items"/>
                <munit:assert-on-equals message="Incorrectly derived discounts" expectedValue="#[2]" actualValue="#[flowVars.discounts.size()]" doc:name="Assert Equals - discounts"/>
            </mock:assertions-after-call>
        </mock:spy>
        <munit:set payload="#[getResource('testData.json').asStream()]" mimeType="application/json" doc:name="Load Test Data"/>
        <dw:transform-message doc:name="Transform to Java">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <flow-ref name="arrayaccessorbrokenpocFlow" doc:name="Flow-ref to RunArrayAccessor"/>
        <mock:verify-call messageProcessor=".*:.*" doc:name="Verify Call">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['UTF-8 Encode']"/>
            </mock:with-attributes>
        </mock:verify-call>
    </munit:test>
</mule>
